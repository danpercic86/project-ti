@page "/add-employee"
@using ProjectTI.Data
@using Microsoft.EntityFrameworkCore

<PageTitle>Adăugare angajat</PageTitle>

<h1>Adăugare angajat</h1>

<EditForm class="d-flex flex-column w-25" Model="Employee" OnValidSubmit="@Save">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <label>Nume:</label>
    <InputText class="py-1 my-2" @bind-Value="Employee.LastName"></InputText>

    <label>Prenume: </label>
    <InputText class="py-1 my-2" @bind-Value="Employee.FirstName"></InputText>

    <label>Functie: </label>
    <InputText class="py-1 my-2" @bind-Value="Employee.Position"></InputText>

    <label>Salar baza: </label>
    <InputNumber class="py-1 my-2" @bind-Value="Employee.Salary"></InputNumber>

    <label>Spor: </label>
    <InputNumber class="py-1 my-2" @bind-Value="Employee.Boost"></InputNumber>

    <label>Premii brute: </label>
    <InputNumber class="py-1 my-2" @bind-Value="Employee.Bonuses"></InputNumber>

    <label>Retineri: </label>
    <InputNumber class="py-1 my-2" @bind-Value="Employee.Retentions"></InputNumber>

    <button class="btn btn-primary mt-2" type="submit">Salvare</button>
</EditForm>

@inject ApplicationDbContext _appDbContext
@inject IJSRuntime _jsRuntime

@code {
    private Employee Employee { get; set; } = new();

    private async Task Save()
    {
        Employee.Id = Guid.NewGuid().ToString();
        await _appDbContext.Employees.AddAsync(Employee);
        await _appDbContext.SaveChangesAsync();
        await _jsRuntime.InvokeVoidAsync("alert", "Informațiile au fost salvate!");
    }

}
