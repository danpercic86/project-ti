@page "/employees"
@using ProjectTI.Data
@using Microsoft.EntityFrameworkCore

<PageTitle>Actualizare date</PageTitle>

<h1>Actualizare date</h1>

@if (Employees.Count != 0)
{
    <EditForm Model="Employees" OnValidSubmit="@Save">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <table class="table">
            <thead>
            <tr>
                <th>Nume</th>
                <th>Prenume</th>
                <th>Funcție</th>
                <th>Salar baza</th>
                <th>Spor</th>
                <th>Premii brute</th>
                <th>Rețineri</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var employee in Employees)
            {
                <tr>
                    <td>
                        <InputText @bind-Value="employee.LastName"></InputText>
                    </td>
                    <td>
                        <InputText @bind-Value="employee.FirstName"></InputText>
                    </td>
                    <td>
                        <InputText @bind-Value="employee.Position"></InputText>
                    </td>
                    <td>
                        <InputNumber @bind-Value="employee.Salary"></InputNumber>
                    </td>
                    <td>
                        <InputNumber @bind-Value="employee.Boost"></InputNumber>
                    </td>
                    <td>
                        <InputNumber @bind-Value="employee.Bonuses"></InputNumber>
                    </td>
                    <td>
                        <InputNumber @bind-Value="employee.Retentions"></InputNumber>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        <button class="btn btn-primary" type="submit">Salvare</button>
    </EditForm>
}

@inject ApplicationDbContext _appDbContext
@inject IJSRuntime _jsRuntime

@code {
    private List<Employee> Employees { get; set; } = new();

    private async Task Save()
    {
        _appDbContext.Employees.UpdateRange(Employees);
        await _appDbContext.SaveChangesAsync();
        await _jsRuntime.InvokeVoidAsync("alert", "Informațiile au fost salvate!");
    }

    protected override async Task OnInitializedAsync()
    {
        Employees = await _appDbContext.Employees.ToListAsync();
    }
}
